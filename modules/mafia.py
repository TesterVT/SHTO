import asyncio
import random
from twitchio.ext import commands

class MafiaCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.games = {}  # {"channel": {...}}

    @commands.command(name="mafia")
    async def mafia(self, ctx, action: str = None):
        if hasattr(self.bot, "admin") and self.bot.admin.is_module_disabled(ctx.channel.name, "mafia"):
            await ctx.send("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !mafia –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ –Ω–∞ –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ.")
            return
        if action == "join":
            await self.join(ctx)
        elif action == "leave":
            await self.leave(ctx)
        elif action == "start":
            await self.start(ctx)
        elif action == "end":
            await self.end(ctx)
        else:
            await ctx.send("üìú –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: !mafia join | leave | start | end")

    async def join(self, ctx):
        channel = ctx.channel.name
        if channel not in self.games:
            self.games[channel] = {"players": {}, "mafia": [], "detective": "", "doctor": "", "votes": {}, "started": False}

        if ctx.author.name in self.games[channel]["players"]:
            await ctx.send("‚ö†Ô∏è –í—ã —É–∂–µ –≤ –∏–≥—Ä–µ!")
            return

        self.games[channel]["players"][ctx.author.name] = "civilian"
        await ctx.send(f"‚úÖ {ctx.author.name} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!")

    async def leave(self, ctx):
        channel = ctx.channel.name
        if channel in self.games and ctx.author.name in self.games[channel]["players"]:
            del self.games[channel]["players"][ctx.author.name]
            await ctx.send(f"üö™ {ctx.author.name} –≤—ã—à–µ–ª –∏–∑ –∏–≥—Ä—ã.")
        else:
            await ctx.send("‚ö†Ô∏è –í—ã –Ω–µ –≤ –∏–≥—Ä–µ.")

    async def start(self, ctx):
        channel = ctx.channel.name
        if channel not in self.games or self.games[channel]["started"]:
            await ctx.send("‚ö†Ô∏è –ò–≥—Ä–∞ —É–∂–µ –∏–¥—ë—Ç –∏–ª–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞.")
            return

        game = self.games[channel]
        players = list(game["players"].keys())

        if len(players) < 6:
            await ctx.send("üö´ –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 6 –∏–≥—Ä–æ–∫–æ–≤.")
            return

        await ctx.send("üéÆ –ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥!")
        await asyncio.sleep(10)

        random.shuffle(players)
        mafia_count = max(1, len(players) // 4)

        game["mafia"] = players[:mafia_count]
        game["detective"] = players[mafia_count] if mafia_count + 1 < len(players) else None
        game["doctor"] = players[mafia_count + 1] if mafia_count + 2 < len(players) else None
        civilians = players[mafia_count + 2:]

        for mafia in game["mafia"]:
            user = await self.fetch_user(mafia)
            if user:
                await user.send("ü§µ –í—ã - –º–∞—Ñ–∏—è! –£–Ω–∏—á—Ç–æ–∂—å—Ç–µ –≤—Å–µ—Ö –º–∏—Ä–Ω—ã—Ö!")

        if game["detective"]:
            user = await self.fetch_user(game["detective"])
            if user:
                await user.send("üïµÔ∏è –í—ã - –¥–µ—Ç–µ–∫—Ç–∏–≤! –ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª—é–¥–µ–π –∫–∞–∂–¥—É—é –Ω–æ—á—å.")

        if game["doctor"]:
            user = await self.fetch_user(game["doctor"])
            if user:
                await user.send("üßë‚Äç‚öïÔ∏è –í—ã - –¥–æ–∫—Ç–æ—Ä! –õ–µ—á–∏—Ç–µ –æ–¥–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∫–∞–∂–¥—É—é –Ω–æ—á—å.")

        for civilian in civilians:
            user = await self.fetch_user(civilian)
            if user:
                await user.send("üòá –í—ã - –º–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å. –í—ã—á–∏—Å–ª–∏—Ç–µ –º–∞—Ñ–∏—é –∏ –≤—ã–∂–∏–≤–∏—Ç–µ.")

        game["started"] = True
        await self.night_phase(ctx)

    async def night_phase(self, ctx):
        channel = ctx.channel.name
        game = self.games[channel]

        game["night_actions"] = {"kill": None, "heal": None, "check": None}
        await ctx.send("üåô –ù–∞—Å—Ç—É–ø–∞–µ—Ç –Ω–æ—á—å. –í—Å–µ –∑–∞—Å—ã–ø–∞—é—Ç... (30 —Å–µ–∫.)")

        await asyncio.sleep(30)

        kill = game["night_actions"]["kill"]
        heal = game["night_actions"]["heal"]
        check = game["night_actions"]["check"]

        if kill and kill != heal and kill in game["players"]:
            await ctx.send(f"‚ò†Ô∏è {kill} –±—ã–ª —É–±–∏—Ç –Ω–æ—á—å—é!")
            del game["players"][kill]
            if kill in game["mafia"]:
                game["mafia"].remove(kill)
            if kill == game["doctor"]:
                game["doctor"] = None
            if kill == game["detective"]:
                game["detective"] = None

        if check and game["detective"]:
            result = "–º–∞—Ñ–∏—è" if check in game["mafia"] else "–º–∏—Ä–Ω—ã–π"
            user = await self.fetch_user(game["detective"])
            if user:
                await user.send(f"üïµÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞: {check} ‚Äî {result}.")

        await self.check_win(ctx)

    async def day_phase(self, ctx):
        channel = ctx.channel.name
        game = self.games[channel]
        await ctx.send("üåû –ù–∞—Å—Ç—É–ø–∏–ª –¥–µ–Ω—å. –û–±—Å—É–∂–¥–µ–Ω–∏–µ ‚Äî 1 –º–∏–Ω—É—Ç–∞.")
        await asyncio.sleep(60)

        game["votes"] = {}
        await ctx.send("üó≥Ô∏è –í—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ !vote <–∏–º—è>")

        await asyncio.sleep(60)

        if not game["votes"]:
            await ctx.send("üò∂ –ù–∏–∫—Ç–æ –Ω–µ –±—ã–ª –∏–∑–≥–Ω–∞–Ω.")
        else:
            voted_out = max(game["votes"], key=game["votes"].get)
            await ctx.send(f"üö´ {voted_out} –±—ã–ª –∏–∑–≥–Ω–∞–Ω –∏–∑ –¥–µ—Ä–µ–≤–Ω–∏.")
            if voted_out in game["players"]:
                del game["players"][voted_out]
            if voted_out in game["mafia"]:
                game["mafia"].remove(voted_out)
            if voted_out == game["detective"]:
                game["detective"] = None
            if voted_out == game["doctor"]:
                game["doctor"] = None

        await self.check_win(ctx)

    async def check_win(self, ctx):
        channel = ctx.channel.name
        game = self.games[channel]

        mafia_alive = len(game["mafia"])
        civilians_alive = len(game["players"]) - mafia_alive

        if mafia_alive == 0:
            await ctx.send("üéâ –ú–∏—Ä–Ω—ã–µ –ø–æ–±–µ–¥–∏–ª–∏! –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.")
            self.games.pop(channel)
            return
        if mafia_alive >= civilians_alive:
            await ctx.send("üíÄ –ú–∞—Ñ–∏—è –∑–∞—Ö–≤–∞—Ç–∏–ª–∞ –¥–µ—Ä–µ–≤–Ω—é! –ü–æ–±–µ–¥–∞ –º–∞—Ñ–∏–∏.")
            self.games.pop(channel)
            return

        await self.day_phase(ctx)

    async def fetch_user(self, name):
        try:
            users = await self.bot.fetch_users(names=[name])
            return users[0] if users else None
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –õ–°: {e}")
            return None

    @commands.command(name="kill")
    async def kill(self, ctx, target: str):
        channel = ctx.channel.name
        game = self.games.get(channel)
        if game and ctx.author.name in game["mafia"] and target in game["players"]:
            game["night_actions"]["kill"] = target

    @commands.command(name="check")
    async def check(self, ctx, target: str):
        channel = ctx.channel.name
        game = self.games.get(channel)
        if game and ctx.author.name == game["detective"] and target in game["players"]:
            game["night_actions"]["check"] = target

    @commands.command(name="heal")
    async def heal(self, ctx, target: str):
        channel = ctx.channel.name
        game = self.games.get(channel)
        if game and ctx.author.name == game["doctor"] and target in game["players"]:
            game["night_actions"]["heal"] = target

    @commands.command(name="vote")
    async def vote(self, ctx, target: str):
        channel = ctx.channel.name
        game = self.games.get(channel)
        if game and ctx.author.name in game["players"] and target in game["players"]:
            game["votes"][target] = game["votes"].get(target, 0) + 1

    async def end(self, ctx):
        channel = ctx.channel.name
        if channel in self.games:
            del self.games[channel]
            await ctx.send("üõë –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

def setup(bot):
    bot.add_cog(MafiaCommands(bot))
