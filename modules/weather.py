import aiohttp
import logging
from twitchio.ext import commands
from modules.profiles import get_mention, get_location

logger = logging.getLogger(__name__)

API_KEY = "16bbbd7e4298dfc2e0e6c39b11ff5741"  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π –∫–ª—é—á
API_URL = "http://api.openweathermap.org/data/2.5/weather"

class WeatherCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command(name="weather")
    async def weather_command(self, ctx: commands.Context):
        if hasattr(self.bot, "admin") and self.bot.admin.is_module_disabled(ctx.channel.name, "weather"):
            await ctx.send("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: !weather –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ –Ω–∞ –¥–∞–Ω–Ω–æ–º –∫–∞–Ω–∞–ª–µ.")
            return
        args = ctx.message.content.strip().split(" ", 1)
        city = args[1].strip() if len(args) > 1 else None

        if not city:
            city = get_location(ctx)

        if not city:
            await ctx.send(get_mention(ctx) + "‚ùå –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥. –ü—Ä–∏–º–µ—Ä: !weather –ö–∞–∑–∞–Ω—å. –ò–ª–∏ –∑–∞–¥–∞–π—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ !set location (–≥–æ—Ä–æ–¥)")
            return

        logger.info(f"–ó–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞: {city}")

        async with aiohttp.ClientSession() as session:
            try:
                params = {
                    "q": city,
                    "appid": API_KEY,
                    "units": "metric",
                    "lang": "ru"
                }
                async with session.get(API_URL, params=params) as resp:
                    if resp.status == 200:
                        data = await resp.json()
                        name = data["name"]
                        temp = data["main"]["temp"]
                        weather_desc = data["weather"][0]["description"]
                        humidity = data["main"]["humidity"]
                        wind = data["wind"]["speed"]

                        response = (f"üå¶ –ü–æ–≥–æ–¥–∞ –≤ {name}: {weather_desc.capitalize()}, üå° {temp}¬∞C, "
                                    f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%, üí® –í–µ—Ç–µ—Ä: {wind} –º/—Å.")
                        await ctx.send(get_mention(ctx) + response)
                    else:
                        await ctx.send(get_mention(ctx) + f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è '{city}'.")
            except Exception as e:
                logger.error(get_mention(ctx) + f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã: {e}")
                await ctx.send(get_mention(ctx) + "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã.")
